{"version":3,"file":"gooddate.pipe.js","sourceRoot":"","sources":["gooddate.pipe.ts"],"names":[],"mappings":"AAAA,gDAAgD;;;;;;;;;;;AAEhD,qBAAoC,eAAe,CAAC,CAAA;AAGpD;IAAA;QAMI,WAAM,GAAG;YACT,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM;YAC1F,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU;SACnG,CAAA;IAgBL,CAAC;IAfG,gCAAS,GAAT,UAAU,KAAa;QACnB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,wBAAwB;QAErE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;IACL,CAAC;IAzBL;QAAC,WAAI,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;;oBAAA;IA0B3B,mBAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,oBAAY,eAyBxB,CAAA","sourcesContent":["//stock date method doesn't seem to like strings\r\n\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({ name: \"gooddate\" })\r\nexport class GooddatePipe implements PipeTransform {\r\n    month: string;\r\n    year: number;\r\n    day: number;\r\n    currentYear: number;\r\n\r\n    months = {\r\n    \"01\": \"January\", \"02\": \"February\", \"03\": \"March\", \"04\": \"April\", \"05\": \"May\", \"06\": \"June\",\r\n    \"07\": \"July\", \"08\": \"August\", \"09\": \"September\", \"10\": \"October\", \"11\": \"November\", \"12\": \"December\"\r\n    }\r\n    transform(value: string) {\r\n        this.year = parseInt(value.substring(0, 4));\r\n        this.month = this.months[value.substring(5, 7)];   \r\n        this.day = parseInt(value.substring(8, 10)); //eliminate leading zero\r\n\r\n        let d = new Date();\r\n        this.currentYear = d.getFullYear();\r\n        if (this.year < this.currentYear) {\r\n            return this.month + \" \" + this.year;\r\n        } else if (this.year === this.currentYear) {\r\n            return this.month + \" \" + this.day;\r\n        } else {\r\n            return \"Error\";\r\n        }\r\n    }\r\n}"]}