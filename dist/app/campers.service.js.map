{"version":3,"file":"campers.service.js","sourceRoot":"","sources":["campers.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+B,eAAe,CAAC,CAAA;AAC/C,2BAA2B,iBAAiB,CAAC,CAAA;AAE7C,qBAA2B,eAAe,CAAC,CAAA;AAI3C;IAGI,wBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAFvB,cAAS,GAAG,yDAAyD,CAAC;QACtE,gBAAW,GAAG,0DAA0D,CAAC;IAC9C,CAAC;IAEpC,wCAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;aAChC,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAW,QAAQ,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC;aACvD,EAAE,CAAC,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,EAA3C,CAA2C,CAAC;aACvD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IACD,0CAAiB,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aAClC,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAW,QAAQ,CAAC,IAAI,EAAE,EAA1B,CAA0B,CAAC;aACvD,EAAE,CAAC,UAAA,IAAI,IAAG,OAAA,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,EAA7C,CAA6C,CAAC;aACxD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IACO,oCAAW,GAAnB,UAAoB,KAAe;QAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAClE,CAAC;IArBL;QAAC,iBAAU,EAAE;;sBAAA;IAsBb,qBAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,sBAAc,iBAqB1B,CAAA","sourcesContent":["import { Http, Response } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ICamper } from \"./camper\";\r\n\r\n@Injectable()\r\nexport class CampersService {\r\n    private _30DayTop = \"https://fcctop100.herokuapp.com/api/fccusers/top/recent\";\r\n    private _overallTop = \"https://fcctop100.herokuapp.com/api/fccusers/top/alltime\";\r\n    constructor(private _http: Http) { }\r\n\r\n    get30DayCampers(): Observable<ICamper[]> {\r\n        return this._http.get(this._30DayTop)\r\n            .map((response: Response) => <ICamper[]>response.json())\r\n            .do(data => console.log(\"30 Day Camper Leaders Loaded\"))\r\n            .catch(this.handleError);\r\n    }\r\n    getOverallCampers(): Observable<ICamper[]> {\r\n        return this._http.get(this._overallTop)\r\n            .map((response: Response) => <ICamper[]>response.json())\r\n            .do(data=> console.log(\"All Time Camper Leaders Loaded\"))\r\n            .catch(this.handleError);\r\n    }\r\n    private handleError(error: Response) {\r\n        console.log(error);\r\n        return Observable.throw(error.json().error || \"Server error\");\r\n    }\r\n}"]}